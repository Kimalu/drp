v1.0
	* 采用dom4j读取xml配置文件

v1.1
	* 实现用户添加业务逻辑
	* 前端javascript验证	
	
v1.2
	* 完成用户添加	
	
v1.3
	* 验证用户是否重复
	
v1.4
	* 保持页面数据	
		
v1.5
	* 采用Ajax完成用户代码是否重复验证
	
v1.6
	* 采用Ajax完成用户代码是否重复验证(使用匿名函数)					
	
v1.7
	* 分页查询	
	
v1.8
	* 封装分页组件PageModel	
	
v1.9
	* 采用泛型封装分页组件PageModel	
	
v2.0
	* 用户维护页面控制,选择所有用户checkbox控制
		
v2.1
	* 用户维护页面控制，删除和修改部分
	
v2.2
	* 修改用户
				
v2.3
	* 删除用户				
	
v2.4
	* 采用Filter统一设置字符集	
	* 根据用户id批量删除
	
v2.5
	* 用户登陆	
	
v2.6
	* 测试SQL注入	
	
v2.7
	* 读取分销商树	
	
v2.8
	* 根据节点id查询节点信息
	
v2.9
	* 修改区域	
		
v.3.0
	* 加入取得分销商级别列表方法定义
	* 重构datadict包,加入domian和manager包
		
v3.1
	* 实现id生成器
		
v3.2
	* 区域添加		
	
v3.3
	* 修改分销商
		
v3.4
	* 添加分销商
	
v3.5
	* 删除分销商	
	* 加入查询供方分销商和查询需方客户方法
	
v3.6
	* 加入会计核算期维护和密码修改作业
		
v3.7
	* 添加物料，Dao的创建使用标准的GoF工厂方法模式	
			
v3.8
	* 添加物料，显示添加物料页面（查询物料类别列表，查询物料单位列表）
		
v3.9
	* 添加物料，完成物料添加
		
v4.0
	* 添加物料，手动异常处理	
	* 注意转发和重定向
	* 注意get提交乱码问题
v4.1
	* 添加物料，自动的异常处理（声明式异常）
	* 关于主键重复的判断(错误码，手动根据物料代码查询)
	
v4.2
	* 根据id查询物料	 
	* 404和500错误的处理	
	
v4.3
	* 分页查询物料	
	* 完善添加成功返回
	* servlet初始化参数的问题
	* <conttext-param>标签的使用
	
v4.4
	* 物料修改
		
v4.5
	* 上传物料图片(将图片命名为和物料代码相同)
	
v4.6
	* 上传物料图片(将图片文件名称存储到数据库表中，通常使用此种方案)
		
v4.7
	* 改善物料部分工厂方法模式的使用，去除生产线		
	
v4.8
	* 采用抽象工厂完成ItemDao和ItemService的创建
		
v4.9
	* 采用初始化Servlet，InitServlet将BeanFactory放到ServletContext中
	* 改善getBean方法，传递Class对象，getBean(ItemDao.class)
	
v5.0
	* 建立AbstractItemServlet，将物料维护公共的部分放到该类中
	* 注意<load-on-startup>标签值大小的含义
	* 注意当方法被覆盖后，也就是多态，那么父类方法不会执行，必须显示的
	  调用父类的方法，如显示调用Servlet中的init方法，super.init();
	  			
v5.1
	* 将物料维护修改为JSTL实现
			
v5.2
	* 建立流向单部分的实体模型		
		
v5.3
	* 建立Dao和Service层
	* 采用ThreadLocal完成Connection的封装		
	
v5.4
	* 流向单页面整理
	* 添加流向单

v5.5
	* 完成流向单的查询	
		
v5.6
	* 加入查询流向单明细、删除流向单、送审流向单、修改流向单方法定义
			
v5.7
	* 采用动态代理控制流向单部分的事务
				
v5.8
	* 重构项目
		--将basePath放到ServletContext中
		--将jsp中重复的部分分离出来,采用include引入进来
		--采用ServletContextListener将BeanFactory放入到ServletContext中


						